{
	"info": {
		"_postman_id": "a618ab10-6abe-4a2a-90e9-8824fbb92805",
		"name": "c5-project",
		"description": "Requests that should work!",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Public",
			"item": [
				{
					"name": "/api/v0/feed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"None of the items returned are editable\", function () {",
									"    var jsonData = pm.response.json();",
									"    for (let item of jsonData) {",
									"        pm.expect(item.editable).to.eql(false);",
									"    }",
									"});",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v0/feed",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v0",
								"feed"
							]
						},
						"description": "Get all the items in the feed"
					},
					"response": []
				},
				{
					"name": "/api/v0/feed authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Some of the items returned are editable\", function () {",
									"    var jsonData = pm.response.json();",
									"    let someEditable = false;",
									"    for (let item of jsonData) {",
									"        someEditable = someEditable || item.editable;",
									"    }",
									"    pm.expect(someEditable).to.eql(true);",
									"});",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v0/feed",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v0",
								"feed"
							]
						},
						"description": "Get all the items in the feed"
					},
					"response": []
				},
				{
					"name": "/api/v0/feed/thumbnails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The count is equal to the number of items rx\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.count).to.eql(jsonData.rows.length);",
									"});",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v0/feed/thumbnails",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v0",
								"feed",
								"thumbnails"
							]
						},
						"description": "Get all the items in the feed"
					},
					"response": []
				},
				{
					"name": "/api/v0/feed/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"A single item is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v0/feed/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v0",
								"feed",
								":id"
							],
							"query": [
								{
									"key": "id",
									"value": "4",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "Request a specific feed item detail"
					},
					"response": []
				},
				{
					"name": "/api/v0/feed/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"A single item is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v0/feed/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v0",
								"feed",
								":id"
							],
							"query": [
								{
									"key": "id",
									"value": "4",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "Request a specific feed item detail"
					},
					"response": []
				},
				{
					"name": "/api/v0/feed/:id/thumbnail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"A single item is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhlbGxvQGdtYWlsLmNvbSIsInBhc3N3b3JkX2hhc2giOiIkMmIkMTAkaUJvaTZ2dWg3dXJhblBsMUpkamsuT2dFUGhlS1RSb2VKTi5ERm9MY214ZlJyMDZ0SDA4OGUiLCJjcmVhdGVkQXQiOiIyMDIxLTEyLTI3VDIzOjUwOjExLjA0NFoiLCJ1cGRhdGVkQXQiOiIyMDIxLTEyLTI3VDIzOjUwOjExLjA0NVoiLCJpYXQiOjE2NDA2NDkwNTZ9.LctCxHH77VnwpkC7snkXczi722Ry0ePf8u08S1jFJ6Y",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v0/feed/:id/thumbnail",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v0",
								"feed",
								":id",
								"thumbnail"
							],
							"query": [
								{
									"key": "id",
									"value": "4",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "Request a specific feed item detail"
					},
					"response": []
				},
				{
					"name": "/api/v0/user/auth valid registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"A single item is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"test@example.com\",\n\t\"password\":\"test\"\n}"
						},
						"url": {
							"raw": "{{host}}/api/v0/users/auth",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v0",
								"users",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "/api/v0/user/auth invalid registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"auth is false and a message is included in the error body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.not.eql(null);",
									"    pm.expect(jsonData.message).to.not.eql(null)",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"fancypass\"\n}"
						},
						"url": {
							"raw": "{{host}}/api/v0/users/auth",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v0",
								"users",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "/api/v0/user/auth/login valid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"body includes an email and token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.auth).to.eql(true);",
									"    pm.expect(jsonData.user).to.not.eql(null);",
									"    pm.expect(jsonData.token).to.not.eql(null)",
									"    ",
									"    pm.environment.set(\"token\", jsonData.token);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"test@example.com\",\n\t\"password\":\"test\"\n}"
						},
						"url": {
							"raw": "{{host}}/api/v0/users/auth/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v0",
								"users",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/api/v0/user/auth/login invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"auth is false and a message is included in the error body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.not.eql(null);",
									"    pm.expect(jsonData.message).to.not.eql(null)",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{host}}/api/v0/users/auth/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v0",
								"users",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Unauthorized",
			"item": [
				{
					"name": "/api/v0/feed unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/v0/feed",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v0",
								"feed"
							]
						},
						"description": "Post a new item to the feed"
					},
					"response": []
				}
			]
		},
		{
			"name": "Authorized",
			"item": [
				{
					"name": "/api/v0/feed invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"body includes a message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{host}}/api/v0/feed",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v0",
								"feed"
							]
						},
						"description": "Post a new item to the feed"
					},
					"response": []
				},
				{
					"name": "/api/v0/feed authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"The post returns a new item with an id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"caption\": \"Hello\"\n}"
						},
						"url": {
							"raw": "{{host}}/api/v0/feed",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v0",
								"feed"
							]
						},
						"description": "Post a new item to the feed"
					},
					"response": []
				},
				{
					"name": "/api/v0/feed/signed-url authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/v0/feed/signed-url/:fileName",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v0",
								"feed",
								"signed-url",
								":fileName"
							],
							"variable": [
								{
									"key": "fileName",
									"value": "test.jpg"
								}
							]
						},
						"description": "Post a new item to the feed"
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:8080"
		},
		{
			"key": "token",
			"value": "",
			"type": "default"
		}
	]
}